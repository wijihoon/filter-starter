spring:
  config:
    activate:
      on-profile: "local"

jwt:
  secret: cffb6073014440864761f4a8a55e7d2d730033ccbc7b426039175d28ecdc81c1fc2546a76f47600ad610660f4b4d211f2dbfa875a3f2633cddfc7222f936e060
  validity: 3600000
  refresh:
    validity: 2592000000

#cors:
#  allowed-origins:
#    - "https://alloweddomain.com"
#    - "https://anotheralloweddomain.com"
#    - "http://localhost:48080"
#    - "https://toss.im/"
#  allowed-methods:
#    - "GET"
#    - "POST"
#  allowed-headers:
#    - "Authorization"
#    - "Content-Type"
#    - "X-Requested-With"
#    - "Accept"
#    #PostMan
#    - "Cache-Control"
#    - "Postman-Token"
#  allow-credentials: false

kafka:
  enabled: false
  bootstrapServers: localhost:9092  # 수정된 키 이름
  producer:
    keySerializer: org.apache.kafka.common.serialization.StringSerializer
    valueSerializer: org.apache.kafka.common.serialization.StringSerializer
    topic:
      log: log_topic


logging:
  level:
    root: DEBUG # 기본 로그 레벨을 INFO로 설정합니다.
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} %file:%line - %msg%n%ex{full}"
  file:
    name: logs/application.log # 로그 파일의 경로와 이름을 설정합니다.
    pattern:
      file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} %file:%line - %msg%n%ex{full}"
  requestBody:
    truncate: true # 요청 본문 자르기 활성화 여부
  responseBody:
    truncate: true # 응답 본문 자르기 활성화 여부
  body:
    maxSize: 10000 # 본문 자를 때 최대 크기 (바이트 단위)

openapi:
  title: "Private Label Credit Card API" # OpenAPI 문서의 제목
  version: "1.0.0" # OpenAPI 문서의 버전
  description: "This is a default description for the API." # OpenAPI 문서의 설명
  contact:
    name: "Default Contact Name" # 연락처 이름
    url: "http://default-contact-url.com" # 연락처 URL
    email: "contact@example.com" # 연락처 이메일 주소
  servers:
    - url: "http://default-server-url.com" # 서버 URL
      description: "Default server description" # 서버 설명
    - url: "http://another-server-url.com" # 추가 서버 URL
      description: "Another server description" # 추가 서버 설명

xss:
  enable: true
  patterns:
    - "<script.*?>.*?</script>" # <script> 태그
    - "<.*?javascript:.*?>" # javascript 프로토콜
    - "<.*?vbscript:.*?>" # vbscript 프로토콜
    - "<.*?data:.*?>" # data URIs
    - "<.*?expression\\(.*?>" # expressions
    - "<.*?onload\\s*=.*?>" # onload 이벤트 핸들러
    - "<.*?onclick\\s*=.*?>" # onclick 이벤트 핸들러
    - "<.*?onerror\\s*=.*?>" # onerror 이벤트 핸들러
    - "<.*?onmouseover\\s*=.*?>" # onmouseover 이벤트 핸들러
    - "<.*?onfocus\\s*=.*?>" # onfocus 이벤트 핸들러
    - "<.*?onchange\\s*=.*?>" # onchange 이벤트 핸들러
    - "<.*?oninput\\s*=.*?>" # oninput 이벤트 핸들러
    - "<.*?onabort\\s*=.*?>" # onabort 이벤트 핸들러
    - "<.*?onbeforeunload\\s*=.*?>" # onbeforeunload 이벤트 핸들러
    - "<.*?src\\s*=.*?>" # src 속성
    - "<.*?href\\s*=.*?>" # href 속성
    - "<.*?background\\s*=.*?>" # background 속성
    - "<iframe.*?>.*?</iframe>" # iframe 태그
    - "<object.*?>.*?</object>" # object 태그
    - "<embed.*?>" # embed 태그
    - "<form.*?>" # form 태그
    - "<style.*?>" # style 태그
    - "<.*?data-.*?>" # data 속성

debug: true
server:
  port: 48080
