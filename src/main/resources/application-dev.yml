spring:
  config:
    activate:
      on-profile: "dev"

redis:
  host: dev-redis-server # 개발 환경 Redis 서버의 호스트명을 설정합니다.
  port: 6379 # 개발 환경 Redis 서버의 포트 번호를 설정합니다.
  password: your_dev_redis_password # 개발 환경 Redis 서버의 비밀번호를 설정합니다.
  timeout: 2000 # Redis 커넥션 타임아웃을 2000 밀리초로 설정합니다.

jwt:
  secret: 4df1a335aa6d141b2b7c026ae402ade5da0cce2f381d684f191a4c8ee0a45f9f6f586d0d1029c15314428928e803e5a0a06bf471e6cfd892be0fd3e280b5e2ac # 개발 환경에서 사용할 JWT 비밀 키를 설정합니다.
  validity: 3600000 # JWT의 유효 기간을 1시간(3600000 밀리초)으로 설정합니다.
  refresh:
    validity: 2592000000 # 리프레시 토큰의 유효 기간을 30일(2592000000 밀리초)으로 설정합니다.
# CORS 설정을 위한 프로퍼티들입니다.
cors:
  # 허용된 도메인 리스트입니다. 이 도메인들로부터의 요청만 허용됩니다.
  # 여러 개의 도메인을 공백으로 구분하여 나열할 수 있습니다.
  allowed-origins:
    - "https://alloweddomain.com" # 첫 번째 허용된 도메인
    - "https://anotheralloweddomain.com" # 두 번째 허용된 도메인

  # 허용할 HTTP 메서드 리스트입니다. 지정된 메서드만 CORS 요청으로 허용됩니다.
  # 예를 들어, GET, POST 메서드만 허용할 수 있습니다.
  allowed-methods:
    - "GET" # GET 메서드 허용
    - "POST" # POST 메서드 허용

  # 허용할 HTTP 헤더 리스트입니다. 요청에 포함된 헤더 중 이 리스트에 있는 것만 허용됩니다.
  # 클라이언트에서 전송하는 헤더의 종류를 지정합니다.
  allowed-headers:
    - "Authorization" # Authorization 헤더 허용
    - "Content-Type" # Content-Type 헤더 허용

  # 자격 증명(쿠키, 인증 정보 등)을 포함한 요청을 허용할지 여부를 설정합니다.
  # true로 설정하면 CORS 요청에 자격 증명이 포함될 수 있습니다.
  allow-credentials: true
kafka:
  bootstrap.servers: localhost:9092 # Kafka 브로커의 주소를 설정합니다.
  producer:
    key.serializer: org.apache.kafka.common.serialization.StringSerializer # Kafka Producer의 키 직렬화기를 설정합니다.
    value.serializer: org.apache.kafka.common.serialization.StringSerializer # Kafka Producer의 값 직렬화기를 설정합니다.
    topic:
      log: log_topic

logging:
  level:
    root: DEBUG # 기본 로그 레벨을 DEBUG로 설정합니다.
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} %file:%line - %msg%n%ex{full}"
  file:
    name: logs/application.log # 로그 파일의 경로와 이름을 설정합니다.
    pattern:
      file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} %file:%line - %msg%n%ex{full}"
  requestBody:
    truncate: true # 요청 본문 자르기 활성화 여부
  responseBody:
    truncate: true # 응답 본문 자르기 활성화 여부
  body:
    maxSize: 10000 # 본문 자를 때 최대 크기 (바이트 단위)



